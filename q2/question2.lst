


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             question2, CODE, READWRITE
    2 00000000                 ENTRY
    3 00000000         ;Assembly program (main)
    4 00000000         ;loads X value, stores tempStore address in register, ca
                       lls COMPUTE subroutine to change r0 value, sets r1 to 2(
                       r0)
    5 00000000         
    6 00000000 E59F0048        LDR              r0, intX    ;loads X value into
                                                             register so it can
                                                             be used by COMPUTE
                                                            
    7 00000004 E28F40C8        ADR              r4, tempStore ;puts the address
                                                             of the stack in r4
                                                             so it can be acces
                                                            sed
    8 00000008 EB000001        BL               COMPUTE     ;calls COMPUTE func
                                                            tion, result: chang
                                                            ed r0 value based o
                                                            n initial x value
    9 0000000C E0801000        ADD              r1, r0, r0  ;sets r1 to double 
                                                            value of r0
   10 00000010 EAFFFFFE 
                       COMPLETE
                               B                COMPLETE    ;program complete
   11 00000014         
   12 00000014         
   13 00000014         
   14 00000014         ;Function
   15 00000014         ;takes data value stored in r0, sets x equal to it. if y
                       =(a*x^2+b*x+c) > (d), returns (d). Otherwise, returns y.
                       
   16 00000014         
   17 00000014 E924000E 
                       COMPUTE STMFD            r4!, {r1-r3} ;temporarily store
                                                            s r1,r2,r3 in stack
                                                             so they can go bac
                                                            k to original value
                                                            s after function ca
                                                            ll
   18 00000018         
   19 00000018         ;math simplification by factoring: (y) = ((a*x^2)+(b*x)+
                       c) = (x((a*x)+b) + c)
   20 00000018 E59F2020        LDR              r2, intA    ;loads value of A s
                                                            o it can be used in
                                                             calculation
   21 0000001C E59F3020        LDR              r3, intB    ;loads value of B s
                                                            o it can be used in
                                                             calculation
   22 00000020 E0213290        MLA              r1, r0, r2, r3 ;r1 = ((a*x)+b)
   23 00000024 E59F201C        LDR              r2, intC    ;loads value of C s
                                                            o it can be used in
                                                             calculation
   24 00000028 E0202091        MLA              r0, r1, r0, r2 ;r0 = (x*r1) + c
                                                             = y
   25 0000002C         
   26 0000002C E59F1018        LDR              r1, intD    ;loads value of D s
                                                            o we can compare it
                                                             to y   
   27 00000030 E1500001        CMP              r0, r1      ;check if y > d



ARM Macro Assembler    Page 2 


   28 00000034 C1A00001        MOVGT            r0,r1       ;set r0 to min(y,d)
                                                            
   29 00000038         
   30 00000038 E8B4000E        LDMFD            r4!, {r1-r3} ;empties stack and
                                                             restores r1,r2,r3 
                                                            to their values bef
                                                            ore the call
   31 0000003C E12FFF1E        bx               lr          ;returns to main fu
                                                            nction where it was
                                                             called
   32 00000040         
   33 00000040         
   34 00000040         
   35 00000040                 AREA             question2, DATA, READWRITE
   36 00000040 00000005 
                       intA    DCD              5           ;allocates memory f
                                                            or given signed int
                                                            eger and stores int
                                                            o intA
   37 00000044 00000006 
                       intB    DCD              6           ;allocates memory f
                                                            or given signed int
                                                            eger and stores int
                                                            o intA
   38 00000048 00000007 
                       intC    DCD              7           ;allocates memory f
                                                            or given signed int
                                                            eger and stores int
                                                            o intA
   39 0000004C 0000005A 
                       intD    DCD              90          ;allocates memory f
                                                            or given signed int
                                                            eger and stores int
                                                            o intA
   40 00000050 00000003 
                       intX    DCD              3           ;allocates memory f
                                                            or given signed int
                                                            eger and stores int
                                                            o intA
   41 00000054 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00            SPACE            128         ;gives space for it
                                                            ems to be stored in
                                                             tempStore
   42 000000D4 00000000 
                       tempStore
                               DCD              0           ;allocates memory s
                                                            pace for tempStore
   43 000000D8         
   44 000000D8                 END
Command Line: --debug --xref --bi --apcs=interwork --depend=.\question2.d -o.\q
uestion2.o -ID:\programs\Keil\ARM\RV31\INC -ID:\programs\Keil\ARM\CMSIS\Include
 --predefine="__EVAL SETA 1" --list=.\question2.lst question2.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

COMPLETE 00000010

Symbol: COMPLETE
   Definitions
      At line 10 in file question2.s
   Uses
      At line 10 in file question2.s
Comment: COMPLETE used once
COMPUTE 00000014

Symbol: COMPUTE
   Definitions
      At line 17 in file question2.s
   Uses
      At line 8 in file question2.s
Comment: COMPUTE used once
intA 00000040

Symbol: intA
   Definitions
      At line 36 in file question2.s
   Uses
      At line 20 in file question2.s
Comment: intA used once
intB 00000044

Symbol: intB
   Definitions
      At line 37 in file question2.s
   Uses
      At line 21 in file question2.s
Comment: intB used once
intC 00000048

Symbol: intC
   Definitions
      At line 38 in file question2.s
   Uses
      At line 23 in file question2.s
Comment: intC used once
intD 0000004C

Symbol: intD
   Definitions
      At line 39 in file question2.s
   Uses
      At line 26 in file question2.s
Comment: intD used once
intX 00000050

Symbol: intX
   Definitions
      At line 40 in file question2.s
   Uses
      At line 6 in file question2.s
Comment: intX used once
question2 00000000

Symbol: question2



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 1 in file question2.s
   Uses
      None
Comment: question2 unused
tempStore 000000D4

Symbol: tempStore
   Definitions
      At line 42 in file question2.s
   Uses
      At line 7 in file question2.s
Comment: tempStore used once
9 symbols
340 symbols in table
