


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             question1, CODE, READWRITE
    2 00000000                 ENTRY                        ;program that will 
                                                            copy a string, afte
                                                            r removing all occu
                                                            rences of the word 
                                                            "the" from it. Pres
                                                            erves spaces and nu
                                                            ll char. 
    3 00000000         
    4 00000000 E59F005C        LDR              r0, =STRING1 ;makes r0 point to
                                                             STRING1 - this wil
                                                            l allow us to read 
                                                            the null terminated
                                                             string  
    5 00000004 E59F105C        LDR              r1, =STRING2 ;makes r1 point to
                                                             STRING2 - this wil
                                                            l allow us to write
                                                             to the string. wil
                                                            l be null terminate
                                                            d
    6 00000008         
    7 00000008         ;THECHECK checks for the existence of the string "the". 
                       Put before LOOP to handle the case that the string start
                       s with "the"
    8 00000008 E5D05000 
                       THECHECK
                               LDRB             r5, [r0]    ;loads char at curr
                                                            ent index into r5
    9 0000000C E3550074        CMP              r5,#0x74    ;Check if char is '
                                                            t'
   10 00000010 1A00000B        BNE              LOOP        ;if its not, contin
                                                            ue adding chars as 
                                                            usual
   11 00000014 E5D05001        LDRB             r5, [r0, #1] ;if char is t, con
                                                            tinue checking for 
                                                            existence of "the"
   12 00000018 E3550068        CMP              r5,#0x68    ;check if char afte
                                                            r t is h
   13 0000001C 1A000008        BNE              LOOP        ;if its not, go to 
                                                            current index and a
                                                            dd chars as usual
   14 00000020 E5D05002        LDRB             r5, [r0, #2] ;if char is h, con
                                                            tinue checking for 
                                                            existence of "the"
   15 00000024 E3550065        CMP              r5,#0x65    ;check if char afte
                                                            r h is e
   16 00000028 1A000005        BNE              LOOP        ;if its not, go to 
                                                            current index and a
                                                            dd chars as usual
   17 0000002C E5D05003        LDRB             r5, [r0, #3] ;if char is e, con
                                                            tinue checking for 
                                                            existence of "the"
   18 00000030 E3550020        CMP              r5,#0x20    ;check if char afte
                                                            r e is space
   19 00000034 02800003        ADDEQ            r0, #3      ;if it is, add 3 to
                                                             the current index 
                                                            to skip over "the",
                                                             before going back 
                                                            to adding chars. th



ARM Macro Assembler    Page 2 


                                                            is also keeps all s
                                                            paces
   20 00000038 E3550000        CMP              r5,#0x00    ;check if char afte
                                                            r e is NULL. this h
                                                            andles the case whe
                                                            n "the" is at the e
                                                            nd of a string
   21 0000003C 02800003        ADDEQ            r0, #3      ;if char after e is
                                                             null, end program 
                                                            without adding "the
                                                            "
   22 00000040 EAFFFFFF        B                LOOP        ;go back to adding 
                                                            chars. back to orig
                                                            inal index if "the"
                                                             wasnt found, or or
                                                            iginal index + 3 if
                                                             "the" was found.
   23 00000044         
   24 00000044         
   25 00000044 E4D02001 
                       LOOP    LDRB             r2, [r0], #1 ;puts value that i
                                                            ndex is pointing to
                                                             into r2, then incr
                                                            ements it by one. T
                                                            his allows us to it
                                                            erate over the stri
                                                            ng, one char at a t
                                                            ime.
   26 00000048 E3520000        CMP              r2, #0x00   ;check if char is n
                                                            ull
   27 0000004C E4C12001        STRB             r2, [r1], #1 ;add char to strin
                                                            g2 and increment st
                                                            ring2 index. this w
                                                            ill add all chars (
                                                            including null and 
                                                            space), except the 
                                                            word "the". The wor
                                                            d the will never be
                                                             pointed to by r2, 
                                                            bc program skips ov
                                                            er it.
   28 00000050 0A000002        BEQ              ENDLOOP     ;if null end progra
                                                            m
   29 00000054 E3520020        CMP              r2, #0x20   ;checks if current 
                                                            char is a space
   30 00000058 0AFFFFEA        BEQ              THECHECK    ;if it is, check fo
                                                            r occurance of "the
                                                            " by checking if ch
                                                            ar after the space 
                                                            is a t
   31 0000005C 1AFFFFF8        BNE              LOOP        ;if its not, contin
                                                            ue adding chars to 
                                                            string2 as usual.
   32 00000060         
   33 00000060         
   34 00000060 EAFFFFFE 
                       ENDLOOP B                ENDLOOP     ;end of program
   35 00000064         
   36 00000064         



ARM Macro Assembler    Page 3 


   37 00000064 00000000 
              00000000         AREA             question1, DATA, READWRITE
   38 0000006C 61 6E 64 
              20 74 68 
              65 20 6D 
              61 6E 20 
              73 61 69 
              64 20 74 
              68 65 79 
              20 6D 75 
              73 74 20 
              67 6F    STRING1 DCB              "and the man said they must go"
 
                                                            ;String1
   39 00000089 00      EoS     DCB              0x00        ;end of string1
   40 0000008A 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 STRING2 space            0xFF        ;just allocating 25
                                                            5 bytes
   41 00000189                 END
Command Line: --debug --xref --bi --apcs=interwork --depend=.\q1.d -o.\q1.o -ID
:\programs\Keil\ARM\RV31\INC -ID:\programs\Keil\ARM\CMSIS\Include --predefine="
__EVAL SETA 1" --list=.\q1.lst q1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ENDLOOP 00000060

Symbol: ENDLOOP
   Definitions
      At line 34 in file q1.s
   Uses
      At line 28 in file q1.s
      At line 34 in file q1.s

EoS 00000089

Symbol: EoS
   Definitions
      At line 39 in file q1.s
   Uses
      None
Comment: EoS unused
LOOP 00000044

Symbol: LOOP
   Definitions
      At line 25 in file q1.s
   Uses
      At line 10 in file q1.s
      At line 13 in file q1.s
      At line 16 in file q1.s
      At line 22 in file q1.s
      At line 31 in file q1.s

STRING1 0000006C

Symbol: STRING1
   Definitions
      At line 38 in file q1.s
   Uses
      At line 4 in file q1.s
Comment: STRING1 used once
STRING2 0000008A

Symbol: STRING2
   Definitions
      At line 40 in file q1.s
   Uses
      At line 5 in file q1.s
Comment: STRING2 used once
THECHECK 00000008

Symbol: THECHECK
   Definitions
      At line 8 in file q1.s
   Uses
      At line 30 in file q1.s
Comment: THECHECK used once
question1 00000000

Symbol: question1
   Definitions
      At line 1 in file q1.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      None
Comment: question1 unused
7 symbols
340 symbols in table
